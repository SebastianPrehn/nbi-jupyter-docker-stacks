# Set default username
FROM {{ parent }}
LABEL MAINTAINER="Rasmus Munk <rasmus.munk@nbi.ku.dk>"
ARG PACKAGE_TIMEOUT=60
ARG FACETS_VERSION=0.2.2
ARG NB_UID={{ NB_UID or "1000" }}
ARG NB_GID={{ NB_GID or "100" }}

ENV NB_UID=$NB_UID \
    NB_GID=$NB_GID

USER root

RUN usermod -u $NB_UID $NB_USER \
    && groupmod -g $NB_GID users

# Setup default timeout of installing packages
RUN echo "[global]" > /etc/pip.conf \
    && echo "timeout=$PACKAGE_TIMEOUT" >> /etc/pip.conf

RUN apt-get update \
    && apt-get install -yq --no-install-recommends \
    autoconf \
    automake \
    bzip2 \
    zip \
    cmake \
    curl \
    g++ \
    gcc \
    gfortran \
    git \
    htop \
    less \
    lftp \
    make \
    man \
    nano \
    openssh-client \
    perl \
    rclone \
    rsync \
    screen \
    tar \
    texlive \
    texlive-latex-extra \
    texlive-xetex \
    texlive-fonts-recommended \
    texlive-plain-generic \
    tree \
    tzdata \
    unzip \
    vim \
    wget \
    zlib1g \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Environement variables
ENV CONDA_DIR=/opt/conda
ENV JUPYTER_PATH=$CONDA_DIR/envs/jupyter

RUN chown $NB_UID:$NB_GID -R /tmp /home/$NB_USER $CONDA_DIR

USER $NB_UID
WORKDIR /tmp

# https://github.com/mamba-org/mamba/issues/2882
RUN conda install -n base conda==23.7.4
RUN mamba config --set remote_read_timeout_secs $PACKAGE_TIMEOUT

# Update mamba, npm, yarn
RUN mamba update --quiet -n base conda \
    && npm i -g agentkeepalive \
    && npm i -g npm \
    && npm i -g yarn \
    && mamba clean --all -f -y \
    && npm cache clean --force \
    && rm -fr /home/$NB_USER/.yarn \
    && rm -fr /home/$NB_USER/.npm \
    && rm -fr /home/$NB_USER/.node \
    && rm -fr /home/$NB_USER/.npmrc \
    && rm -fr /home/$NB_USER/.cache \
    && rm -rf /tmp/* \
    && fix-permissions $CONDA_DIR \
    && fix-permissions /home/$NB_USER

# jupyter/base-notebook no longer provides pip
RUN mamba install --quiet --yes \
    pip \
    && mamba clean --all -f -y \
    && fix-permissions $CONDA_DIR \
    && fix-permissions /home/$NB_USER

# Notebook/Lab dependencies
# dedupe, resolve duplicates packages
# https://ipyleaflet.readthedocs.io/en/latest/installation.html#using-conda
# jupyter-widgets/jupyterlab-manager and matplotlib is for ipympl support which is labs
# replacement for notebook plots
# https://github.com/yuvipanda/jupyter-launcher-shortcuts
RUN mamba run -n base pip3 install \
    black \
    bqplot \
    facets-overview \
    nbconvert[webpdf] \
    jupyter-resource-usage \
    jupyter-server-proxy \
    jupyterlab-git \
    jupyterlab-widgets \
    jupyterlab-code-formatter \
    ipyleaflet \
    ipympl \
    ipywidgets \
    && mamba clean -y -f --all \
    && fix-permissions $CONDA_DIR \
    && fix-permissions /home/$NB_USER

# VSCode proxy extension
# RUN git clone https://github.com/betatim/vscode-binder.git \
#     && cd vscode-binder \
#     && conda run -n base pip3 install .

# Don't activate the base environment by default
# This is instead set via the DEFAULT_CONDA_ENVIRONMENT environment variable
RUN mamba init \
    && mamba config --set auto_activate_base false

# Disable the JupyterLab news announcements
# https://jupyterlab.readthedocs.io/en/stable/privacy_policies.html
RUN jupyter labextension disable "@jupyterlab/apputils-extension:announcements"

# Hide the default $CONDA_DIR/bin/pip to ensure that the user doesn't try to
# install into that one by mistake when it should have been installed into one
# of the jupyter conda environments
RUN mv $CONDA_DIR/bin/pip $CONDA_DIR/bin/jupyterlab_pip \
    && mv $CONDA_DIR/bin/pip3 $CONDA_DIR/bin/jupyterlab_pip3

# Ensure there is a local bin directory for user binaries
RUN mkdir -p ~/.local/bin
ENV PATH="~/.local/bin:$PATH"

USER root

# Script to update the ENV of a particular kernelspec in the image
COPY ./res/update_kernel_spec.py /usr/local/bin/update_kernel_spec.py
RUN chmod +x /usr/local/bin/update_kernel_spec.py

#Install code-server (https://github.com/betatim/vscode-binder/blob/master/postBuild)
# ARG CODE_SERVER_VERSION="4.8.3"
# ARG CODE_SERVER_ARCH="amd64"
# # Download and install VS Code server
# RUN wget -q -O code-server.tar.gz https://github.com/cdr/code-server/releases/download/v${CODE_SERVER_VERSION}/code-server-${CODE_SERVER_VERSION}-linux-${CODE_SERVER_ARCH}.tar.gz \
# 	&& mkdir -p /usr/local \
# 	&& tar -xvf code-server.tar.gz -C /usr/local --strip-components=1 \
# 	&& rm -rf code-server.tar.gz

USER $NB_UID
WORKDIR "${HOME}"

# Setup the welcome message
COPY ./res/welcome.txt /home/$NB_USER/welcome.txt
RUN cat ~/welcome.txt >> ~/.bashrc \
    && rm -fr /home/$NB_USER/welcome.txt

# Ensure that container runs as the notebook user
USER $NB_UID
